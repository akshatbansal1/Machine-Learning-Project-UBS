{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Users\\\\saxen\\\\OneDrive\\\\Desktop\\\\ReactApp\\\\main_final\\\\src\\\\HeatMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport ReactDOM from 'react-dom';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport Title from './Title';\nimport PropTypes from 'prop-types';\n{\n  /*export default class ApexChart extends React.Component {\n     constructor(props) {\n       super(props);\n       this.state = {\n       \n         series: this.props.data,\n         options: {\n           chart: {\n             height: 450,\n             type: 'heatmap',\n           },\n           dataLabels: {\n             enabled: false\n           },\n           colors: this.props.colors,\n           xaxis: {\n             type: 'category',\n             categories: ['10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '01:00', '01:30']\n           },\n           title: {\n             text: 'HeatMap Chart (Different color shades for each series)'\n           },\n           grid: {\n             padding: {\n               right: 20\n             }\n           }\n         },\n       \n       \n       };\n     }\n   \n     render() {\n       return (\n         \n   <div id=\"chart\">\n  <ReactApexChart options={this.state.options} series={this.state.series} type=\"heatmap\" height={450} />\n  </div>\n  );\n  }\n  }\n  const domContainer = document.querySelector('#app');\n  ReactDOM.render(React.createElement(ApexChart), domContainer);*/\n}\nexport default function HeatMap(props) {\n  _s();\n\n  let stat = props.stat !== undefined ? props.stat : 0;\n  const theme = useTheme(); //let graphData = (props.data!==undefined) ? props.data : data;\n\n  let seriesH = [{\n    name: \"RoundX Evaluations\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -1\n    }, {\n      x: 'A to B',\n      y: -1\n    }, {\n      x: 'B to C',\n      y: -1\n    }, {\n      x: 'C to D',\n      y: -1\n    }]\n  }, {\n    name: \"Completed Degrees from Top 500 Schools\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -3\n    }, {\n      x: 'A to B',\n      y: -2\n    }, {\n      x: 'B to C',\n      y: -3\n    }, {\n      x: 'C to D',\n      y: -2\n    }]\n  }, {\n    name: \"RoundX Investor Count\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -2\n    }, {\n      x: 'A to B',\n      y: -4\n    }, {\n      x: 'B to C',\n      y: -6\n    }, {\n      x: 'C to D',\n      y: -8\n    }]\n  }, {\n    name: \"Time to reach RoundX\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -22\n    }, {\n      x: 'A to B',\n      y: -29\n    }, {\n      x: 'B to C',\n      y: -13\n    }, {\n      x: 'C to D',\n      y: -32\n    }]\n  }, {\n    name: \"Category: Financial Service\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -4\n    }, {\n      x: 'A to B',\n      y: -6\n    }, {\n      x: 'B to C',\n      y: -11\n    }, {\n      x: 'C to D',\n      y: -6\n    }]\n  }, {\n    name: \"Category: AI\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -11\n    }, {\n      x: 'A to B',\n      y: -17\n    }, {\n      x: 'B to C',\n      y: -14\n    }, {\n      x: 'C to D',\n      y: -23\n    }]\n  }, {\n    name: \"Category: Data & Analytics\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -7\n    }, {\n      x: 'A to B',\n      y: -12\n    }, {\n      x: 'B to C',\n      y: -13\n    }, {\n      x: 'C to D',\n      y: -18\n    }]\n  }, {\n    name: \"% Male Founders\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -6\n    }, {\n      x: 'A to B',\n      y: -9\n    }, {\n      x: 'B to C',\n      y: -18\n    }, {\n      x: 'C to D',\n      y: -19\n    }]\n  }, {\n    name: \"% Female Founders\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -17\n    }, {\n      x: 'A to B',\n      y: -10\n    }, {\n      x: 'B to C',\n      y: -15\n    }, {\n      x: 'C to D',\n      y: -16\n    }]\n  }, {\n    name: \"FAANG Experience\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -13\n    }, {\n      x: 'A to B',\n      y: -21\n    }, {\n      x: 'B to C',\n      y: -19\n    }, {\n      x: 'C to D',\n      y: -26\n    }]\n  }, {\n    name: \"Social Media Presence\",\n    data: [{\n      x: 'Pre-Series to A',\n      y: -8\n    }, {\n      x: 'A to B',\n      y: -8\n    }, {\n      x: 'B to C',\n      y: -10\n    }, {\n      x: 'C to D',\n      y: -13\n    }]\n  }];\n  let series = stat === 1 ? seriesH : props.data;\n  let options = {\n    series: series,\n\n    /*chart: {\n    height: 200,\n    type: 'heatmap',\n    },\n    dataLabels: {\n    enabled: false\n    },\n    colors: theme.palette.primary.main,\n    xaxis: {\n    type: 'category',\n    categories: ['10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '01:00', '01:30']\n    },\n    grid: {\n    padding: {\n        right: 20\n    }\n    }*/\n    plotOptions: {\n      heatmap: {\n        distributed: stat == 1 ? false : true,\n        shadeIntensity: 1,\n        reverseNegativeShade: false,\n        colorScale: {\n          inverse: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"heatmap\",\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 7\n  }, this);\n}\n\n_s(HeatMap, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = HeatMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeatMap\");","map":{"version":3,"sources":["D:/Users/saxen/OneDrive/Desktop/ReactApp/main_final/src/HeatMap.js"],"names":["React","Component","Chart","ReactDOM","useTheme","LineChart","Line","XAxis","YAxis","Label","ResponsiveContainer","BarChart","Bar","Title","PropTypes","HeatMap","props","stat","undefined","theme","seriesH","name","data","x","y","series","options","plotOptions","heatmap","distributed","shadeIntensity","reverseNegativeShade","colorScale","inverse","title"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport ReactDOM from 'react-dom';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport Title from './Title';\nimport PropTypes from 'prop-types';\n\n\n{/*export default class ApexChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n      \n        series: this.props.data,\n        options: {\n          chart: {\n            height: 450,\n            type: 'heatmap',\n          },\n          dataLabels: {\n            enabled: false\n          },\n          colors: this.props.colors,\n          xaxis: {\n            type: 'category',\n            categories: ['10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '01:00', '01:30']\n          },\n          title: {\n            text: 'HeatMap Chart (Different color shades for each series)'\n          },\n          grid: {\n            padding: {\n              right: 20\n            }\n          }\n        },\n      \n      \n      };\n    }\n  \n    render() {\n      return (\n        \n  <div id=\"chart\">\n<ReactApexChart options={this.state.options} series={this.state.series} type=\"heatmap\" height={450} />\n</div>\n );\n}\n}\nconst domContainer = document.querySelector('#app');\nReactDOM.render(React.createElement(ApexChart), domContainer);*/}\n\nexport default function HeatMap(props) {\n    let stat = (props.stat!==undefined) ? props.stat : 0\n    const theme = useTheme();\n    //let graphData = (props.data!==undefined) ? props.data : data;\n    let seriesH = [\n        {\n          name: \"RoundX Evaluations\",\n          data: [\n            {x: 'Pre-Series to A',y: -1}, \n            {x: 'A to B',y: -1}, \n            {x: 'B to C',y: -1}, \n            {x: 'C to D',y: -1}\n          ]\n        },\n        {\n          name: \"Completed Degrees from Top 500 Schools\",\n          data: [\n            {x: 'Pre-Series to A',y: -3}, \n            {x: 'A to B',y: -2}, \n            {x: 'B to C',y: -3}, \n            {x: 'C to D',y: -2}\n          ]\n        },\n        {\n          name: \"RoundX Investor Count\",\n          data: [\n            {x: 'Pre-Series to A',y: -2}, \n            {x: 'A to B',y: -4}, \n            {x: 'B to C',y: -6}, \n            {x: 'C to D',y: -8}\n          ]\n        },\n        {\n          name: \"Time to reach RoundX\",\n          data: [\n            {x: 'Pre-Series to A',y: -22}, \n            {x: 'A to B',y: -29}, \n            {x: 'B to C',y: -13}, \n            {x: 'C to D',y: -32},\n          ]\n        },\n        {\n          name: \"Category: Financial Service\",\n          data: [\n            {x: 'Pre-Series to A',y: -4}, \n            {x: 'A to B',y: -6}, \n            {x: 'B to C',y: -11}, \n            {x: 'C to D',y: -6}\n          ]\n        },\n        {\n          name: \"Category: AI\",\n          data: [\n            {x: 'Pre-Series to A',y: -11}, \n            {x: 'A to B',y: -17}, \n            {x: 'B to C',y: -14}, \n            {x: 'C to D',y: -23}\n          ]\n        },\n        {\n          name: \"Category: Data & Analytics\",\n          data: [\n            {x: 'Pre-Series to A',y: -7}, \n            {x: 'A to B',y: -12}, \n            {x: 'B to C',y: -13}, \n            {x: 'C to D',y: -18}\n          ]\n        },\n        {\n          name: \"% Male Founders\",\n          data: [\n            {x: 'Pre-Series to A',y: -6}, \n            {x: 'A to B',y: -9}, \n            {x: 'B to C',y: -18}, \n            {x: 'C to D',y: -19}\n          ]\n        },\n        {\n          name: \"% Female Founders\",\n          data: [\n            {x: 'Pre-Series to A',y: -17}, \n            {x: 'A to B',y: -10}, \n            {x: 'B to C',y: -15}, \n            {x: 'C to D',y: -16}\n          ]\n        },\n        {\n          name: \"FAANG Experience\",\n          data: [\n            {x: 'Pre-Series to A',y: -13}, \n            {x: 'A to B',y: -21}, \n            {x: 'B to C',y: -19}, \n            {x: 'C to D',y: -26}\n          ]\n        },\n        {\n          name: \"Social Media Presence\",\n          data: [\n            {x: 'Pre-Series to A',y: -8}, \n            {x: 'A to B',y: -8}, \n            {x: 'B to C',y: -10}, \n            {x: 'C to D',y: -13}\n          ]\n        }\n      ];\n    let series = (stat===1) ? seriesH :props.data;\n    let options = {\n        series: series,\n        /*chart: {\n        height: 200,\n        type: 'heatmap',\n        },\n        dataLabels: {\n        enabled: false\n        },\n        colors: theme.palette.primary.main,\n        xaxis: {\n        type: 'category',\n        categories: ['10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '01:00', '01:30']\n        },\n        grid: {\n        padding: {\n            right: 20\n        }\n        }*/\n        plotOptions: {\n          heatmap: {\n            distributed: (stat==1)?false:true,\n            shadeIntensity: 1,\n            reverseNegativeShade: false,\n            colorScale: {\n              inverse: false\n            }\n          }\n        }\n    };\n  \n    return (\n      <React.Fragment>\n        <Title>{props.title}</Title>\n       <Chart options={options} series={series} type=\"heatmap\" height={200}/> \n      </React.Fragment>\n    );\n  }"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Users\\\\saxen\\\\OneDrive\\\\Desktop\\\\ReactApp\\\\main_final\\\\src\\\\TopList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport Filter from './Filter';\nimport { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline'; // Generate Order Data\n\nfunction Data(name, country_code, index, expected_roi, probability) {\n  return {\n    name,\n    country_code,\n    index,\n    expected_roi,\n    probability\n  };\n}\n\n_c = Data;\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  }\n}));\nexport default function Orders(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    data\n  } = props;\n\n  function compare(a, b) {\n    const compare1 = b[\"Probability\"] = NaN ? 0 : b[\"Probability\"];\n    const compare2 = a[\"Probability\"] = NaN ? 0 : a[\"Probability\"];\n    return parseFloat(compare1) - parseFloat(compare2);\n  }\n\n  console.log(\"abc\".toLowerCase());\n  data.sort(compare);\n\n  function preventDefault() {\n    window.location.pathname = 'companies';\n  }\n\n  const rows = data.slice(0, 10).map((data, index) => {\n    return Data(data.name, data.country_code, data.latest_round, data[\"VGR\"], data[\"Probability\"]);\n  });\n  console.log(rows);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Top performing companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Stage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Expected VGR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Confidence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.country_code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.expected_roi != \"\" ? row.expected_roi + \"%\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: Math.round(parseFloat(row.probability) * 100) + \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.seeMore,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        color: \"primary\",\n        href: \"#\",\n        onClick: preventDefault,\n        children: \"See more companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Orders, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Orders;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Data\");\n$RefreshReg$(_c2, \"Orders\");","map":{"version":3,"sources":["D:/Users/saxen/OneDrive/Desktop/ReactApp/main_final/src/TopList.js"],"names":["React","Link","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Title","Filter","useState","useEffect","clsx","CssBaseline","Data","name","country_code","index","expected_roi","probability","preventDefault","event","useStyles","theme","seeMore","marginTop","spacing","Orders","props","classes","data","compare","a","b","compare1","NaN","compare2","parseFloat","console","log","toLowerCase","sort","window","location","pathname","rows","slice","map","latest_round","row","Math","round","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport Filter from './Filter';\nimport {useState, useEffect} from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n// Generate Order Data\n\nfunction Data( name, country_code, index, expected_roi, probability) {\n    return {  name, country_code, index, expected_roi, probability };\n  }\n\n\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders(props) {\n  const classes = useStyles();\n  const {data} = props;\n  function compare(a,b){\n    const compare1 = b[\"Probability\"]=NaN? 0:b[\"Probability\"];\n    const compare2 = a[\"Probability\"]=NaN? 0:a[\"Probability\"];\n    return parseFloat(compare1) - parseFloat(compare2);\n  }\n  console.log(\"abc\".toLowerCase());\n  data.sort(compare);\n  function preventDefault(){\n    window.location.pathname = 'companies'\n  }\n  const rows = data.slice(0,10).map((data,index) => {\n    return Data( data.name, data.country_code, data.latest_round, data[\"VGR\"], data[\"Probability\"]);\n  });\n  console.log(rows);\n  return (\n    <React.Fragment>\n      <Title>Top performing companies</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Company Name</TableCell>\n            <TableCell>Country</TableCell>\n            <TableCell>Stage</TableCell>\n            <TableCell align=\"right\">Expected VGR</TableCell>\n            <TableCell align=\"right\">Confidence</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.country_code}</TableCell>   \n              <TableCell >{row.index}</TableCell>\n              <TableCell align=\"right\">{row.expected_roi!=\"\"?row.expected_roi+\"%\":\"\"}</TableCell>\n              <TableCell align=\"right\">{Math.round(parseFloat(row.probability)*100) + \"%\"}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more companies\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}